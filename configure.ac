AC_INIT([libhsts], [0.0.1], [tim.ruehsen@gmx.de], [libhsts], [https://gitlab.com/gnuwget/libhsts])
AC_PREREQ([2.59])
AM_INIT_AUTOMAKE([1.10 no-define foreign])

# Generate two configuration headers; one for building the library itself with
# an autogenerated template, and a second one that will be installed alongside
# the library.
AC_CONFIG_HEADERS([config.h])
AC_PROG_CC
m4_ifdef([AM_PROG_AR], [AM_PROG_AR])
LT_INIT
AC_CONFIG_MACRO_DIR([m4])
m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])

dnl Check that compiler understands inline
AC_C_INLINE

dnl Check for visibility support
gl_VISIBILITY

#
# Generate version defines for include file
#
AC_SUBST([LIBHSTS_VERSION_MAJOR], [`echo $VERSION|cut -d'.' -f1`])
AC_SUBST([LIBHSTS_VERSION_MINOR], [`echo $VERSION|cut -d'.' -f2`])
AC_SUBST([LIBHSTS_VERSION_PATCH], [`echo $VERSION|cut -d'.' -f3`])
AC_SUBST([LIBHSTS_VERSION_NUMBER], [`printf '0x%02x%02x%02x' $LIBHSTS_VERSION_MAJOR $LIBHSTS_VERSION_MINOR $LIBHSTS_VERSION_PATCH`])
AC_CONFIG_FILES([include/libhsts.h])

#
# Gettext
#
#AM_GNU_GETTEXT([external],[need-ngettext])
#AM_GNU_GETTEXT_VERSION([0.18.1])

#
# check for doxygen and pandoc
#
AC_ARG_ENABLE([doc], AS_HELP_STRING([--disable-doc], [don't generate any documentation]), , [enable_doc=yes])
if test "$enable_doc" = yes; then
  AC_CHECK_PROGS([DOXYGEN], [doxygen])
  AC_CHECK_PROGS([PANDOC], [pandoc])

  if test -n "$DOXYGEN" || test -n "$PANDOC"; then
    DOCS_INFO="yes (found:"
    if test -n "$DOXYGEN"; then
      DOCS_INFO="$DOCS_INFO Doxygen"
    fi
    if test -n "$PANDOC"; then
      DOCS_INFO="$DOCS_INFO Pandoc"
    fi
    DOCS_INFO="$DOCS_INFO)"
  else
    DOCS_INFO="no (neither Doxygen nor Pandoc found)"
  fi
else
  DOCS_INFO="no (disabled)"
fi
AM_CONDITIONAL([WITH_DOCS], [ test -n "$DOXYGEN" && test -n "$PANDOC" ])
AM_CONDITIONAL([WITH_DOXYGEN], [ test -n "$DOXYGEN" ])
AM_CONDITIONAL([WITH_PANDOC], [ test -n "$PANDOC" ])

#
# enable creation of man pages
#
#enable_man=no
#AC_ARG_ENABLE([man],
#  [AC_HELP_STRING([--enable-man], [generate man pages [default=auto]])],
#  [
#    if test "$enableval" = yes; then
#      enable_man=yes
#      AC_PATH_PROG([XSLTPROC], [xsltproc])
#      AS_IF([test -z "$XSLTPROC"], [
#        AC_MSG_ERROR([xsltproc is required for --enable-man])
#        enable_man="no (xsltproc not found)"
#      ])
#    fi
#  ])
#AM_CONDITIONAL(ENABLE_MAN, test x$enable_man = xyes)

# src/hsts-make-dafsa needs python 2.7+
AM_PATH_PYTHON([2.7])

PKG_PROG_PKG_CONFIG

cfi=no
AC_ARG_ENABLE([cfi],
  [AS_HELP_STRING([--enable-cfi], [Turn on clang's Control Flow Integrity (CFI)])],
  [
    if test "$enableval" = yes; then
      cfi=yes
      CFLAGS=$CFLAGS" -B/usr/bin/gold -fsanitize=cfi -flto -fvisibility=default -fno-sanitize-trap=all"
      AC_LINK_IFELSE([
        AC_LANG_PROGRAM([], [])
      ], [], [
        AC_MSG_ERROR([clang 3.7+ and the 'gold' linker are required for --enable-cfi])
      ])
    fi
  ])

ubsan=no
AC_ARG_ENABLE([ubsan],
  [AS_HELP_STRING([--enable-ubsan], [Turn on Undefined Behavior Sanitizer (UBSan)])],
  [
    if test "$enableval" = yes; then
      ubsan=yes
      CFLAGS=$CFLAGS" -fsanitize=undefined -fno-sanitize-recover=undefined"
    fi
  ])

asan=no
AC_ARG_ENABLE([asan],
  [AS_HELP_STRING([--enable-asan], [Turn on Address Sanitizer (ASan)])],
  [
    if test "$enableval" = yes; then
      asan=yes
      CFLAGS=$CFLAGS" -fsanitize=address -fno-omit-frame-pointer"
      AX_CHECK_COMPILE_FLAG([-fsanitize-address-use-after-scope], [CFLAGS="$CFLAGS -fsanitize-address-use-after-scope"])
    fi
  ])

# Define these substitions here to keep all version information in one place.
# For information on how to properly maintain the library version information,
# refer to the libtool manual, section "Updating library version information":
# https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html
#
# 1. Start with version information of ‘0:0:0’ for each libtool library.
# 2. Update the version information only immediately before a public release of your software. More frequent updates are unnecessary, and only guarantee that the current interface number gets larger faster.
# 3. If the library source code has changed at all since the last update, then increment revision (‘c:r:a’ becomes ‘c:r+1:a’).
# 4. If any interfaces have been added, removed, or changed since the last update, increment current, and set revision to 0.
# 5. If any interfaces have been added since the last public release, then increment age.
# 6. If any existing interfaces have been removed or changed since the last public release, then set age to 0. 
AC_SUBST([LIBHSTS_SO_VERSION], [0:0:0])
AC_SUBST([LIBHSTS_VERSION], $VERSION)

# AM_ICONV sets @LIBICONV@ and @LTLIBICONV@ for use in Makefile.am
# do not use AM_ICONV conditionally
#AM_ICONV

# Check for valgrind
ac_enable_valgrind=no
AC_ARG_ENABLE(valgrind-tests,
  AS_HELP_STRING([--enable-valgrind-tests], [enable using Valgrind for tests]),
  [ac_enable_valgrind=$enableval],
  [ac_enable_valgrind=no])

if test "${ac_enable_valgrind}" = "yes" ; then
  AC_CHECK_PROG(HAVE_VALGRIND, valgrind, yes, no)
  if test "$HAVE_VALGRIND" = "yes" ; then
    VALGRIND_ENVIRONMENT="valgrind --error-exitcode=1 --leak-check=yes --show-reachable=yes --track-origins=yes"
    AC_SUBST(VALGRIND_ENVIRONMENT)
    TESTS_INFO="Test suite will be run under Valgrind"
  else
    TESTS_INFO="Valgrind not found"
  fi
else
  TESTS_INFO="Valgrind testing not enabled"
fi

# Check for distribution-wide HSTS file
AC_ARG_WITH(hsts-distfile,
  AC_HELP_STRING([--with-hsts-distfile=[PATH]], [path to distribution-wide HSTS file]),
  HSTS_DISTFILE=$withval AC_SUBST(HSTS_DISTFILE))

# Override the template file name of the generated .pc file, so that there
# is no need to rename the template file when the API version changes.
AC_CONFIG_FILES([Makefile
                 include/Makefile
                 src/Makefile
                 tools/Makefile
                 tests/Makefile
                 docs/Makefile
                 docs/libhsts.doxy
                 docs/md2man.sh
                 libhsts.pc])
AC_OUTPUT

#  Man pages:         $enable_man
AC_MSG_NOTICE([Summary of build options:

  Version:           ${PACKAGE_VERSION}
  Host OS:           ${host_os}
  Install prefix:    ${prefix}
  Compiler:          ${CC}
  CFlags:            ${CFLAGS} ${CPPFLAGS}
  LDFlags:           ${LDFLAGS}
  Libs:              ${LIBS}
  Sanitizers:        UBSan $ubsan, ASan $asan, CFI $cfi
  Tests:             ${TESTS_INFO}
  HSTS Dist File:    ${HSTS_DISTFILE}
  Documentation:     $DOCS_INFO
])
